/** -------------------POSICIONAMIENTO CSS--------------------- */


/* 
Posicionamiento CSS

Las propiedades FLOAT y POSITION nos permiten modificar la posición natural de cualquier elemento del documento HTML.

El navegador coloca cada elemento teneindo en cuenta el orden en el que aparece en el documento y su tipo de visualización dependiendo si es un elemento de línea o de bloque.


Con FLOAT y POSITION podemos modificar este comportamiento.

Elementos Flotantes:

    - float: Convierte un elemento en flotante desplazándolo hasta la zona más a la izquierda o más a la derecha de la posición en la que originalmente se encontraba.
    - clear: Limpia la flotación (left, right, both).


Tipo de Posicionamiento:

    - static (default)
    - relative
    - absolute
    - fixed
    - sticky 


Para mover los elementos posicionados se activan las propiedades:

    - top (vertical - eje Y)
    - bottom (vertical - eje Y)
    - left (horizontal - eje X)
    - right (horizontal - eje X)
    - z-index (profundidad - eje Z)

Las propiedades top y left van a tener preferencia sobre bottom y right respectivamente.

Estas 5 propiedades no funcionan con el valor de static.
    
*/









/** -------------------POSICIONAMIENTO STATIC--------------------- */

/* 
    static: Es el valor por defecto, significa que el elemento respeta el flujo del documento HTML, por lo que no se puede mover ni posicionar.
*/

.static {
    background-color: yellow;
    position: static;
    top: 10px;
    left: 10px;
}








/** -------------------POSICIONAMIENTO RELATIVE--------------------- */

/* 
relative: El elemento conserva sus dimensiones y posición original en el flujo del documento. Si se mueve toma como referencia su posición original.
*/

.relative {
    background-color: turquoise;
    position: relative;
    width: 300px;
    height: 50px;
    /* top: 50px;
    left: 50px; */
    bottom: 50px;
    right: 50px;
    top: -30px;
    left: -10px;
    top: 300px;
    left: 50px;
}








/** -------------------POSICIONAMIENTO ABSOLUTO--------------------- */
/* 
absolute: El elemento pierde sus dimensiones y posición original en el flujo del documento. Si se mueve puede tomar como referencia 2 elementos:
        
        1) El primer ancestro con posicionamiento relativo.
        2) Si no encuentra un ancestro relativo, se mueve respecto del documento HTML.
*/

.absolute {
    background-color: tomato;
    position: absolute;
    width: 200px;
    height: 50px;
    /* top: 0;
    left: 0; */
    /* top: 100px;
    left: 100px;*/
    right: 0;
    bottom: 0;
}

.relative-parent {
    background-color: khaki;
    position: relative;
    width: 600px;
    height: 50px;
    top: 50px;
    left: 50px;
}

.absolute-child {
    background-color: lightcoral;
    position: absolute;
    /* left: 0;
    top: 0;
    top: -50px;
    left: -30px;*/
    right: 0;
    bottom: 0;
}








/** -------------------POSICIONAMIENTO FIJO--------------------- */
/* 
fixed: El elemento pierde sus dimensiones y posición original en el flujo del documento. Si se mueve toma como referencia el documento HTML y queda fijo en la posición, cuando el scroll se mueva, el elemento no lo hará, queda FIJO.
*/

.fixed {
    background-color: lightgreen;
    position: fixed;
    width: 300px;
    height: 100px;
    /*  right:20px;
    bottom: 10px; */
    top: 30px;
    left: 400px;
}








/** -------------------POSICIONAMIENTO PEGAJOSO--------------------- */
/* 
    sticky: Es una combinación de posicionamiento relative y fixed, para este posicionamiento las propiedades tom, left, bottom y right no mueven al elemento, sirven como un punto de referencia, mientras no lleguen a ese valor el elemento se comporta como relative, cuando llega se converte en fixed.

    Para que este comportamiento funcione el elemento sticky debe ser hijo directo del body o su elemento contenedor debe tener dimensiones explícitas (width y height) definidas y solo será sticky dentro de las dimensiones de su padre contenedor y que su elemento padre esté dentro de la visualización del Viewport del navegador.
*/

.sticky {
    background-color: lightskyblue;
    position: sticky;
    top: 50px;
}

.sticky-parent {
    border: thin dashed black;
    height: 600px;
}

.sticky-child{
    background-color: lightslategray;
    position: sticky;
    top: 75px;
}